Archive member included because of file (symbol)

/usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
                              src/main.o (__udivhi3)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o)
                              /usr/lib/gcc/msp430/4.6.3/crt0ivtbl16.o (_reset_vector__)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
                              /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o) (__watchdog_support)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
                              /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o) (__init_stack)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(__low_level_init.o)
                              /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o) (__low_level_init)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
                              /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o) (__do_copy_data)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
                              /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o) (__do_clear_bss)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(__stop_progExec__.o)
                              /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o) (__stop_progExec__)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
                              /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o) (_endless_loop__)
/usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)
                              /usr/lib/gcc/msp430/4.6.3/crt0ivtbl16.o (_unexpected_)

Allocating common symbols
Common symbol       size              file

txData              0x2               src/uart.o
rxBuffer            0x1               src/uart.o
buf                 0x80              src/main.o

Memory Configuration

Name             Origin             Length             Attributes
sfr              0x0000000000000000 0x0000000000000010
peripheral_8bit  0x0000000000000010 0x00000000000000f0
peripheral_16bit 0x0000000000000100 0x0000000000000100
ram              0x0000000000000200 0x0000000000000100 xw
infomem          0x0000000000001000 0x0000000000000100
infod            0x0000000000001000 0x0000000000000040
infoc            0x0000000000001040 0x0000000000000040
infob            0x0000000000001080 0x0000000000000040
infoa            0x00000000000010c0 0x0000000000000040
rom              0x000000000000e000 0x0000000000001fe0 xr
vectors          0x000000000000ffe0 0x0000000000000020
bsl              0x0000000000000000 0x0000000000000000
ram2             0x0000000000000000 0x0000000000000000 xw
ram_mirror       0x0000000000000000 0x0000000000000000 xw
usbram           0x0000000000000000 0x0000000000000000 xw
far_rom          0x0000000000000000 0x0000000000000000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/msp430/4.6.3/crt0ivtbl16.o
LOAD src/main.o
LOAD src/uart.o
LOAD /usr/lib/gcc/msp430/4.6.3/libgcc.a
LOAD /usr/lib/gcc/msp430/4.6.3/../../../../msp430/lib/libc.a
LOAD /usr/lib/gcc/msp430/4.6.3/libgcc.a
LOAD /usr/lib/gcc/msp430/4.6.3/libcrt0.a
                0x0000000000000040                PROVIDE (__info_segment_size, 0x40)
                0x0000000000001000                PROVIDE (__infod, 0x1000)
                0x0000000000001040                PROVIDE (__infoc, 0x1040)
                0x0000000000001080                PROVIDE (__infob, 0x1080)
                0x00000000000010c0                PROVIDE (__infoa, 0x10c0)
                0x0000000000000000                __IE1 = 0x0
                0x0000000000000002                __IFG1 = 0x2
                0x0000000000000048                __ADC10DTC0 = 0x48
                0x0000000000000049                __ADC10DTC1 = 0x49
                0x000000000000004a                __ADC10AE0 = 0x4a
                0x00000000000001b0                __ADC10CTL0 = 0x1b0
                0x00000000000001b2                __ADC10CTL1 = 0x1b2
                0x00000000000001b4                __ADC10MEM = 0x1b4
                0x00000000000001bc                __ADC10SA = 0x1bc
                0x0000000000000056                __DCOCTL = 0x56
                0x0000000000000057                __BCSCTL1 = 0x57
                0x0000000000000058                __BCSCTL2 = 0x58
                0x0000000000000053                __BCSCTL3 = 0x53
                0x0000000000000059                __CACTL1 = 0x59
                0x000000000000005a                __CACTL2 = 0x5a
                0x000000000000005b                __CAPD = 0x5b
                0x0000000000000128                __FCTL1 = 0x128
                0x000000000000012a                __FCTL2 = 0x12a
                0x000000000000012c                __FCTL3 = 0x12c
                0x0000000000000020                __P1IN = 0x20
                0x0000000000000021                __P1OUT = 0x21
                0x0000000000000022                __P1DIR = 0x22
                0x0000000000000023                __P1IFG = 0x23
                0x0000000000000024                __P1IES = 0x24
                0x0000000000000025                __P1IE = 0x25
                0x0000000000000026                __P1SEL = 0x26
                0x0000000000000041                __P1SEL2 = 0x41
                0x0000000000000027                __P1REN = 0x27
                0x0000000000000028                __P2IN = 0x28
                0x0000000000000029                __P2OUT = 0x29
                0x000000000000002a                __P2DIR = 0x2a
                0x000000000000002b                __P2IFG = 0x2b
                0x000000000000002c                __P2IES = 0x2c
                0x000000000000002d                __P2IE = 0x2d
                0x000000000000002e                __P2SEL = 0x2e
                0x0000000000000042                __P2SEL2 = 0x42
                0x000000000000002f                __P2REN = 0x2f
                0x000000000000012e                __TA0IV = 0x12e
                0x0000000000000160                __TA0CTL = 0x160
                0x0000000000000162                __TA0CCTL0 = 0x162
                0x0000000000000164                __TA0CCTL1 = 0x164
                0x0000000000000166                __TA0CCTL2 = 0x166
                0x0000000000000170                __TA0R = 0x170
                0x0000000000000172                __TA0CCR0 = 0x172
                0x0000000000000174                __TA0CCR1 = 0x174
                0x0000000000000176                __TA0CCR2 = 0x176
                0x0000000000000078                __USICTL0 = 0x78
                0x0000000000000079                __USICTL1 = 0x79
                0x000000000000007a                __USICKCTL = 0x7a
                0x000000000000007b                __USICNT = 0x7b
                0x000000000000007c                __USISRL = 0x7c
                0x000000000000007d                __USISRH = 0x7d
                0x0000000000000078                __USICTL = 0x78
                0x000000000000007a                __USICCTL = 0x7a
                0x000000000000007c                __USISR = 0x7c
                0x0000000000000120                __WDTCTL = 0x120
                0x00000000000010f8                __CALDCO_16MHZ = 0x10f8
                0x00000000000010f9                __CALBC1_16MHZ = 0x10f9
                0x00000000000010fa                __CALDCO_12MHZ = 0x10fa
                0x00000000000010fb                __CALBC1_12MHZ = 0x10fb
                0x00000000000010fc                __CALDCO_8MHZ = 0x10fc
                0x00000000000010fd                __CALBC1_8MHZ = 0x10fd
                0x00000000000010fe                __CALDCO_1MHZ = 0x10fe
                0x00000000000010ff                __CALBC1_1MHZ = 0x10ff

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.text
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)

.rela.text
 *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*)

.rel.rodata
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)

.rela.rodata
 *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*)

.rel.data
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)

.rela.data
 *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*)

.rel.bss
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)

.rela.bss
 *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x000000000000e000      0x37a
                0x000000000000e000                . = ALIGN (0x2)
 *(.init .init.*)
 *(.init0)
 .init0         0x000000000000e000        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o)
                0x000000000000e000                _reset_vector__
 *(.init1)
 .init1         0x000000000000e000        0xc /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
                0x000000000000e000                __watchdog_support
 *(.init2)
 .init2         0x000000000000e00c        0x4 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
                0x000000000000e00c                __init_stack
 *(.init3)
 .init3         0x000000000000e010        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__low_level_init.o)
                0x000000000000e010                __low_level_init
 *(.init4)
 .init4         0x000000000000e010       0x18 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
                0x000000000000e010                __do_copy_data
 .init4         0x000000000000e028       0x16 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
                0x000000000000e028                __do_clear_bss
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 .init9         0x000000000000e03e       0x76 src/main.o
                0x000000000000e03e                main
 *(.fini9)
 .fini9         0x000000000000e0b4        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__stop_progExec__.o)
                0x000000000000e0b4                __stop_progExec__
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000e0b4        0x6 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
                0x000000000000e0b4                _endless_loop__
 *(.fini .fini.*)
                0x000000000000e0ba                . = ALIGN (0x2)
                0x000000000000e0ba                __ctors_start = .
 *(.ctors)
                0x000000000000e0ba                __ctors_end = .
                0x000000000000e0ba                __dtors_start = .
 *(.dtors)
                0x000000000000e0ba                __dtors_end = .
                0x000000000000e0ba                . = ALIGN (0x2)
 *(.text .text.* .gnu.linkonce.t.*)
 .text          0x000000000000e0ba        0x4 /usr/lib/gcc/msp430/4.6.3/crt0ivtbl16.o
                0x000000000000e0ba                __isr_14
                0x000000000000e0ba                __isr_4
                0x000000000000e0ba                __isr_11
                0x000000000000e0ba                __isr_5
                0x000000000000e0ba                __isr_2
                0x000000000000e0ba                __isr_10
                0x000000000000e0ba                __isr_7
                0x000000000000e0ba                __isr_0
                0x000000000000e0ba                __isr_3
                0x000000000000e0ba                __isr_12
                0x000000000000e0ba                __isr_13
                0x000000000000e0ba                __isr_6
                0x000000000000e0ba                __isr_1
 .text.crt0     0x000000000000e0be        0x0 /usr/lib/gcc/msp430/4.6.3/crt0ivtbl16.o
 .text          0x000000000000e0be      0x138 src/main.o
                0x000000000000e0be                l_strlen
                0x000000000000e0d8                reverse
                0x000000000000e11a                itoa
                0x000000000000e18c                get_offset
                0x000000000000e192                put_str
                0x000000000000e1ac                put_num
 .text          0x000000000000e1f6      0x160 src/uart.o
                0x000000000000e1f6                TimerA_UART_init
                0x000000000000e208                TimerA_UART_tx
                0x000000000000e238                TimerA_UART_print
                0x000000000000e252                uart_init
                0x000000000000e286                Timer_A0_ISR
                0x000000000000e286                __isr_9
                0x000000000000e2dc                Timer_A1_ISR
                0x000000000000e2dc                __isr_8
 .text          0x000000000000e356        0x0 /usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
 .text.libgcc   0x000000000000e356       0x22 /usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
                0x000000000000e356                __udivhi3
                0x000000000000e356                __ext_udivmod16
                0x000000000000e370                __umodhi3
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o)
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__low_level_init.o)
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__stop_progExec__.o)
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
 .text          0x000000000000e378        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)
 .text.crt0     0x000000000000e378        0x2 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)
                0x000000000000e378                _unexpected_
                0x000000000000e37a                . = ALIGN (0x2)

.rodata         0x000000000000e37a       0x20
                0x000000000000e37a                . = ALIGN (0x2)
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x000000000000e37a        0x2 src/main.o
 .rodata        0x000000000000e37c       0x1d src/uart.o
                0x000000000000e39a                . = ALIGN (0x2)
 *fill*         0x000000000000e399        0x1 00
                0x000000000000e39a                _etext = .

.data           0x0000000000000200        0x2 load address 0x000000000000e39a
                0x0000000000000200                . = ALIGN (0x2)
                0x0000000000000200                PROVIDE (__data_start, .)
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000200        0x0 /usr/lib/gcc/msp430/4.6.3/crt0ivtbl16.o
 .data          0x0000000000000200        0x0 src/main.o
 .data          0x0000000000000200        0x2 src/uart.o
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__low_level_init.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__stop_progExec__.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
 .data          0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)
                0x0000000000000202                . = ALIGN (0x2)
                0x0000000000000202                _edata = .
                0x000000000000e39a                PROVIDE (__data_load_start, LOADADDR (.data))
                0x0000000000000002                PROVIDE (__data_size, SIZEOF (.data))

.bss            0x0000000000000202       0x88 load address 0x000000000000e39c
                0x0000000000000202                PROVIDE (__bss_start, .)
 *(.bss .bss.*)
 .bss           0x0000000000000202        0x0 /usr/lib/gcc/msp430/4.6.3/crt0ivtbl16.o
 .bss           0x0000000000000202        0x2 src/main.o
                0x0000000000000202                offset
 .bss           0x0000000000000204        0x1 src/uart.o
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_reset_vector__.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__low_level_init.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__stop_progExec__.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
 .bss           0x0000000000000205        0x0 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)
 *(COMMON)
 *fill*         0x0000000000000205        0x1 00
 COMMON         0x0000000000000206       0x80 src/main.o
                0x0000000000000206                buf
 COMMON         0x0000000000000286        0x3 src/uart.o
                0x0000000000000286                txData
                0x0000000000000288                rxBuffer
                0x000000000000028a                . = ALIGN (0x2)
 *fill*         0x0000000000000289        0x1 00
                0x000000000000028a                PROVIDE (__bss_end, .)
                0x0000000000000088                PROVIDE (__bss_size, SIZEOF (.bss))

.noinit         0x000000000000028a        0x2 load address 0x000000000000e39c
                0x000000000000028a                PROVIDE (__noinit_start, .)
 *(.noinit .noinit.*)
 .noinit.crt0   0x000000000000028a        0x2 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
                0x000000000000028a                __wdt_clear_value
                0x000000000000028c                . = ALIGN (0x2)
                0x000000000000028c                PROVIDE (__noinit_end, .)
                0x000000000000028c                . = ALIGN (0x2)
                0x000000000000028c                _end = .

.infomem        0x0000000000001000        0x0
 *(.infomem)
                0x0000000000001000                . = ALIGN (0x2)
 *(.infomem.*)

.infomemnobits  0x0000000000001000        0x0
 *(.infomemnobits)
                0x0000000000001000                . = ALIGN (0x2)
 *(.infomemnobits.*)

.infoa
 *(.infoa .infoa.*)

.infob
 *(.infob .infob.*)

.infoc
 *(.infoc .infoc.*)

.infod
 *(.infod .infod.*)

.vectors        0x000000000000ffe0       0x20
                0x000000000000ffe0                PROVIDE (__vectors_start, .)
 *(.vectors*)
 .vectors       0x000000000000ffe0       0x20 /usr/lib/gcc/msp430/4.6.3/crt0ivtbl16.o
                0x000000000000ffe0                __ivtbl_16
                0x0000000000010000                _vectors_end = .

.fartext        0x0000000000000000        0x0
                0x0000000000000000                . = ALIGN (0x2)
 *(.fartext)
                0x0000000000000000                . = ALIGN (0x2)
 *(.fartext.*)
                0x0000000000000000                _efartext = .

.profiler
 *(.profiler)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x8c
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x14 /usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
 .debug_aranges
                0x0000000000000014       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
 .debug_aranges
                0x0000000000000028       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
 .debug_aranges
                0x000000000000003c       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
 .debug_aranges
                0x0000000000000050       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
 .debug_aranges
                0x0000000000000064       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
 .debug_aranges
                0x0000000000000078       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x51e
 *(.debug_info)
 .debug_info    0x0000000000000000       0xce /usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
 .debug_info    0x00000000000000ce       0xb8 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
 .debug_info    0x0000000000000186       0xb8 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
 .debug_info    0x000000000000023e       0xb8 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
 .debug_info    0x00000000000002f6       0xb8 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
 .debug_info    0x00000000000003ae       0xb8 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
 .debug_info    0x0000000000000466       0xb8 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000       0x8c
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x14 /usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
 .debug_abbrev  0x0000000000000014       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
 .debug_abbrev  0x0000000000000028       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
 .debug_abbrev  0x000000000000003c       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
 .debug_abbrev  0x0000000000000050       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
 .debug_abbrev  0x0000000000000064       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
 .debug_abbrev  0x0000000000000078       0x14 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)

.debug_line     0x0000000000000000      0x3b7
 *(.debug_line)
 .debug_line    0x0000000000000000       0x9c /usr/lib/gcc/msp430/4.6.3/libgcc.a(_udivmod16.o)
 .debug_line    0x000000000000009c       0x84 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__watchdog_support.o)
 .debug_line    0x0000000000000120       0x82 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(__init_stack.o)
 .debug_line    0x00000000000001a2       0x88 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_copy_data.o)
 .debug_line    0x000000000000022a       0x88 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_clear_bss.o)
 .debug_line    0x00000000000002b2       0x83 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_endless_loop__.o)
 .debug_line    0x0000000000000335       0x82 /usr/lib/gcc/msp430/4.6.3/libcrt0.a(_unexpected_.o)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)
                0x0000000000000300                PROVIDE (__stack, (ORIGIN (ram) + 0x100))
                0x000000000000e39a                PROVIDE (__data_start_rom, _etext)
                0x000000000000e39c                PROVIDE (__data_end_rom, (_etext + SIZEOF (.data)))
OUTPUT(switcher.elf elf32-msp430)
